{% comment %}
  Shop the Look Section for StyleMode Theme
  Displays a featured outfit with multiple related products that can be purchased together
{% endcomment %}

{{ 'component-card.css' | asset_url | stylesheet_tag }}
{{ 'section-shop-the-look.css' | asset_url | stylesheet_tag }}

{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}

<div class="color-{{ section.settings.color_scheme }} gradient">
  <div class="shop-the-look page-width section-{{ section.id }}-padding">
    {% if section.settings.title != blank %}
      <div class="title-wrapper-with-link title-wrapper--self-padded-mobile title-wrapper--no-top-margin">
        <h2 class="title {{ section.settings.heading_size }}">
          {{ section.settings.title | escape }}
        </h2>
        {%- if section.settings.view_all_link != blank -%}
          <a href="{{ section.settings.view_all_link }}" class="link underlined-link large-up-hide">
            {{ section.settings.view_all_text | escape }}
          </a>
        {%- endif -%}
      </div>
    {% endif %}

    <div class="shop-the-look__container">
      <div class="shop-the-look__main-image">
        {% if section.settings.image != blank %}
          <div class="shop-the-look__image-wrapper">
            <img
              srcset="{%- if section.settings.image.width >= 550 -%}{{ section.settings.image | image_url: width: 550 }} 550w,{%- endif -%}
                {%- if section.settings.image.width >= 720 -%}{{ section.settings.image | image_url: width: 720 }} 720w,{%- endif -%}
                {%- if section.settings.image.width >= 990 -%}{{ section.settings.image | image_url: width: 990 }} 990w,{%- endif -%}
                {%- if section.settings.image.width >= 1100 -%}{{ section.settings.image | image_url: width: 1100 }} 1100w,{%- endif -%}
                {{ section.settings.image | image_url }} {{ section.settings.image.width }}w"
              src="{{ section.settings.image | image_url: width: 550 }}"
              sizes="(min-width: 990px) calc(50vw - 10rem), (min-width: 750px) calc(50vw - 8.5rem), calc(100vw - 3rem)"
              alt="{{ section.settings.image.alt | escape }}"
              height="{{ section.settings.image.height }}"
              width="{{ section.settings.image.width }}"
              loading="lazy"
              class="shop-the-look__image"
            >
            
            {% for block in section.blocks %}
              {% if block.settings.product != blank %}
                <div class="shop-the-look__product-tag" 
                     style="top: {{ block.settings.tag_position_y }}%; left: {{ block.settings.tag_position_x }}%;"
                     data-product-index="{{ forloop.index }}"
                     {{ block.shopify_attributes }}>
                  <button type="button" class="shop-the-look__product-button" aria-label="{{ 'shop_the_look.product_tag' | t: number: forloop.index }}">
                    <span class="shop-the-look__tag-number">{{ forloop.index }}</span>
                  </button>
                </div>
              {% endif %}
            {% endfor %}
          </div>
        {% else %}
          <div class="shop-the-look__image-wrapper shop-the-look__image-wrapper--placeholder">
            {{ 'lifestyle-2' | placeholder_svg_tag: 'placeholder-svg' }}
          </div>
        {% endif %}
      </div>

      <div class="shop-the-look__products">
        <h3 class="shop-the-look__products-heading">{{ section.settings.products_title | default: 'Complete the Look' }}</h3>
        
        <div class="shop-the-look__products-list">
          {% for block in section.blocks %}
            {% if block.settings.product != blank %}
              {% assign product = block.settings.product %}
              <div class="shop-the-look__product-item" data-product-item="{{ forloop.index }}" {{ block.shopify_attributes }}>
                <div class="shop-the-look__product-image">
                  <span class="shop-the-look__product-number">{{ forloop.index }}</span>
                  <img src="{{ product.featured_image | img_url: '120x' }}" alt="{{ product.featured_image.alt | escape }}" loading="lazy">
                </div>
                <div class="shop-the-look__product-info">
                  <h4 class="shop-the-look__product-title">{{ product.title }}</h4>
                  <div class="shop-the-look__product-price">
                    {% render 'price', product: product %}
                  </div>
                  <div class="shop-the-look__product-buttons">
                    <a href="{{ product.url }}" class="button button--small button--secondary">{{ 'products.product.view_details' | t }}</a>
                    <button type="button" 
                            class="button button--small button--primary quick-add-button"
                            aria-label="{{ 'products.product.add_to_cart' | t }}"
                            data-product-id="{{ product.id }}"
                            data-variant-id="{{ product.selected_or_first_available_variant.id }}">
                      {{ 'products.product.add' | t }}
                    </button>
                  </div>
                </div>
              </div>
            {% endif %}
          {% endfor %}
        </div>
        
        {% if section.settings.show_add_all_button %}
          <div class="shop-the-look__add-all">
            <button type="button" class="button button--primary shop-the-look__add-all-button">
              {{ section.settings.add_all_text | default: 'Add all to cart' }}
            </button>
          </div>
        {% endif %}
      </div>
    </div>
  </div>
</div>

<script>
  class ShopTheLook {
    constructor() {
      this.productTags = document.querySelectorAll('.shop-the-look__product-tag');
      this.productItems = document.querySelectorAll('.shop-the-look__product-item');
      this.quickAddButtons = document.querySelectorAll('.quick-add-button');
      this.addAllButton = document.querySelector('.shop-the-look__add-all-button');
      
      this.init();
    }
    
    init() {
      // Highlight first product by default
      if (this.productItems.length > 0) {
        this.productItems[0].classList.add('is-active');
      }
      
      // Add event listeners to product tags
      this.productTags.forEach(tag => {
        tag.addEventListener('click', this.handleTagClick.bind(this));
      });
      
      // Add event listeners to quick add buttons
      this.quickAddButtons.forEach(button => {
        button.addEventListener('click', this.handleQuickAdd.bind(this));
      });
      
      // Add event listener to add all button
      if (this.addAllButton) {
        this.addAllButton.addEventListener('click', this.handleAddAll.bind(this));
      }
    }
    
    handleTagClick(event) {
      const tag = event.currentTarget;
      const productIndex = tag.dataset.productIndex;
      
      // Remove active class from all product items
      this.productItems.forEach(item => {
        item.classList.remove('is-active');
      });
      
      // Add active class to clicked product item
      const activeItem = document.querySelector(`[data-product-item="${productIndex}"]`);
      if (activeItem) {
        activeItem.classList.add('is-active');
      }
    }
    
    handleQuickAdd(event) {
      const button = event.currentTarget;
      const productId = button.dataset.productId;
      const variantId = button.dataset.variantId;
      
      // Show loading state
      button.classList.add('loading');
      button.innerHTML = 'Adding...';
      
      // Add to cart using Shopify AJAX API
      fetch('/cart/add.js', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          items: [{
            id: variantId,
            quantity: 1
          }]
        })
      })
      .then(response => response.json())
      .then(data => {
        // Update button state
        button.classList.remove('loading');
        button.innerHTML = 'Added';
        
        // Reset button after delay
        setTimeout(() => {
          button.innerHTML = '{{ "products.product.add" | t }}';
        }, 2000);
        
        // Update cart count
        document.dispatchEvent(new CustomEvent('cart:refresh'));
      })
      .catch(error => {
        console.error('Error adding product to cart:', error);
        button.classList.remove('loading');
        button.innerHTML = 'Error';
        
        // Reset button after delay
        setTimeout(() => {
          button.innerHTML = '{{ "products.product.add" | t }}';
        }, 2000);
      });
    }
    
    handleAddAll() {
      // Show loading state
      this.addAllButton.classList.add('loading');
      this.addAllButton.innerHTML = 'Adding...';
      
      // Collect all variant IDs
      const items = [];
      this.quickAddButtons.forEach(button => {
        items.push({
          id: button.dataset.variantId,
          quantity: 1
        });
      });
      
      // Add all items to cart
      fetch('/cart/add.js', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ items })
      })
      .then(response => response.json())
      .then(data => {
        // Update button state
        this.addAllButton.classList.remove('loading');
        this.addAllButton.innerHTML = 'Added All';
        
        // Reset button after delay
        setTimeout(() => {
          this.addAllButton.innerHTML = '{{ section.settings.add_all_text | default: "Add all to cart" }}';
        }, 2000);
        
        // Update cart count
        document.dispatchEvent(new CustomEvent('cart:refresh'));
      })
      .catch(error => {
        console.error('Error adding products to cart:', error);
        this.addAllButton.classList.remove('loading');
        this.addAllButton.innerHTML = 'Error';
        
        // Reset button after delay
        setTimeout(() => {
          this.addAllButton.innerHTML = '{{ section.settings.add_all_text | default: "Add all to cart" }}';
        }, 2000);
      });
    }
  }
  
  // Initialize Shop The Look functionality
  window.addEventListener('DOMContentLoaded', () => {
    new ShopTheLook();
  });
</script>

{% schema %}
{
  "name": "Shop the Look",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "text",
      "id": "title",
      "default": "Shop the Look",
      "label": "Section title"
    },
    {
      "type": "select",
      "id": "heading_size",
      "options": [
        {
          "value": "h2",
          "label": "t:sections.all.heading_size.options__1.label"
        },
        {
          "value": "h1",
          "label": "t:sections.all.heading_size.options__2.label"
        },
        {
          "value": "h0",
          "label": "t:sections.all.heading_size.options__3.label"
        }
      ],
      "default": "h1",
      "label": "t:sections.all.heading_size.label"
    },
    {
      "type": "image_picker",
      "id": "image",
      "label": "Main outfit image"
    },
    {
      "type": "text",
      "id": "products_title",
      "default": "Complete the Look",
      "label": "Products list title"
    },
    {
      "type": "checkbox",
      "id": "show_add_all_button",
      "default": true,
      "label": "Show 'Add all to cart' button"
    },
    {
      "type": "text",
      "id": "add_all_text",
      "default": "Add all to cart",
      "label": "Add all button text"
    },
    {
      "type": "text",
      "id": "view_all_text",
      "default": "View all",
      "label": "View all text"
    },
    {
      "type": "url",
      "id": "view_all_link",
      "label": "View all link"
    },
    {
      "type": "select",
      "id": "color_scheme",
      "options": [
        {
          "value": "accent-1",
          "label": "t:sections.all.colors.accent_1.label"
        },
        {
          "value": "accent-2",
          "label": "t:sections.all.colors.accent_2.label"
        },
        {
          "value": "background-1",
          "label": "t:sections.all.colors.background_1.label"
        },
        {
          "value": "background-2",
          "label": "t:sections.all.colors.background_2.label"
        },
        {
          "value": "inverse",
          "label": "t:sections.all.colors.inverse.label"
        }
      ],
      "default": "background-1",
      "label": "t:sections.all.colors.label"
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    }
  ],
  "blocks": [
    {
      "type": "product",
      "name": "Product",
      "settings": [
        {
          "type": "product",
          "id": "product",
          "label": "Product"
        },
        {
          "type": "range",
          "id": "tag_position_x",
          "min": 0,
          "max": 100,
          "step": 1,
          "unit": "%",
          "label": "Product tag X position",
          "default": 50
        },
        {
          "type": "range",
          "id": "tag_position_y",
          "min": 0,
          "max": 100,
          "step": 1,
          "unit": "%",
          "label": "Product tag Y position",
          "default": 50
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Shop the Look",
      "blocks": [
        {
          "type": "product"
        },
        {
          "type": "product"
        },
        {
          "type": "product"
        }
      ]
    }
  ]
}
{% endschema %}